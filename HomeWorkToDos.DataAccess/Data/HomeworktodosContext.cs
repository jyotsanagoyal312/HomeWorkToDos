// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;
using HomeWorkToDos.DataAccess.Models;

namespace HomeWorkToDos.DataAccess.Data
{
    public partial class HomeworktodosContext : DbContext
    {
        public HomeworktodosContext()
        {
        }

        public HomeworktodosContext(DbContextOptions<HomeworktodosContext> options)
            : base(options)
        {
        }

        public virtual DbSet<Label> Label { get; set; }
        public virtual DbSet<ToDoItem> ToDoItem { get; set; }
        public virtual DbSet<ToDoList> ToDoList { get; set; }
        public virtual DbSet<User> User { get; set; }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<Label>(entity =>
            {
                entity.Property(e => e.CreatedOn).HasDefaultValueSql("(getdate())");

                entity.Property(e => e.IsActive).HasDefaultValueSql("((1))");

                entity.Property(e => e.ModifiedOn).HasDefaultValueSql("(getdate())");

                entity.HasOne(d => d.User)
                    .WithMany(p => p.Label)
                    .HasForeignKey(d => d.UserId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_Label_User");
            });

            modelBuilder.Entity<ToDoItem>(entity =>
            {
                entity.Property(e => e.CreatedOn).HasDefaultValueSql("(getdate())");

                entity.Property(e => e.IsActive).HasDefaultValueSql("((1))");

                entity.Property(e => e.ModifiedOn).HasDefaultValueSql("(getdate())");

                entity.HasOne(d => d.Label)
                    .WithMany(p => p.ToDoItem)
                    .HasForeignKey(d => d.LabelId)
                    .HasConstraintName("FK_ToDoItem_Label");

                entity.HasOne(d => d.ToDoList)
                    .WithMany(p => p.ToDoItem)
                    .HasForeignKey(d => d.ToDoListId)
                    .HasConstraintName("FK_ToDoItem_ToDoList");

                entity.HasOne(d => d.User)
                    .WithMany(p => p.ToDoItem)
                    .HasForeignKey(d => d.UserId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_ToDoItem_User");
            });

            modelBuilder.Entity<ToDoList>(entity =>
            {
                entity.Property(e => e.CreatedOn).HasDefaultValueSql("(getdate())");

                entity.Property(e => e.IsActive).HasDefaultValueSql("((1))");

                entity.Property(e => e.ModifiedOn).HasDefaultValueSql("(getdate())");

                entity.HasOne(d => d.Label)
                    .WithMany(p => p.ToDoList)
                    .HasForeignKey(d => d.LabelId)
                    .HasConstraintName("FK_ToDoList_Label");

                entity.HasOne(d => d.User)
                    .WithMany(p => p.ToDoList)
                    .HasForeignKey(d => d.UserId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_ToDoList_User");
            });

            modelBuilder.Entity<User>(entity =>
            {
                entity.Property(e => e.CreatedOn).HasDefaultValueSql("(getdate())");

                entity.Property(e => e.ModifiedOn).HasDefaultValueSql("(getdate())");
            });

            OnModelCreatingPartial(modelBuilder);
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}